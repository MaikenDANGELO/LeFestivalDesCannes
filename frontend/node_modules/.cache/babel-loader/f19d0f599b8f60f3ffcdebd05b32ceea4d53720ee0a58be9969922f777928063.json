{"ast":null,"code":"import LocalSource from \"@/datasource/controller\";\nasync function getAllPrestatairesFromLocalSource() {\n  return LocalSource.getAllPrestataires();\n}\nasync function getAllPrestataires() {\n  let response;\n  try {\n    // changer la mÃ©thode appelÃ©e quand cette fonctionnalitÃ© l'API est prÃªte\n    response = await getAllPrestatairesFromLocalSource();\n  }\n  // NB: le catch n'aura lieu que pour des requÃªte vers l'API, s'il y a une erreur rÃ©seau\n  catch (err) {\n    response = {\n      error: 1,\n      status: 404,\n      data: 'erreur rÃ©seau, impossible de rÃ©cupÃ©rer la liste des prestataires'\n    };\n  }\n  return response;\n}\nasync function getAvisOfPrestataire(id_prestataire) {\n  let response;\n  try {\n    response = await LocalSource.getAvisOfPrestataire(id_prestataire);\n  } catch (err) {\n    response = {\n      error: 1,\n      status: 404,\n      data: 'erreur réseau, impossible de récupérer la liste des commentaires'\n    };\n  }\n  return response;\n}\nasync function sendAvisOfUser(data) {\n  let response;\n  try {\n    response = await LocalSource.sendAvisOfUser(data);\n  } catch (error) {\n    response = {\n      error: 1,\n      status: 404,\n      data: 'erreur réseau, impossible de de publier le commmentaire'\n    };\n  }\n  return response;\n}\nexport default {\n  getAllPrestataires,\n  getAvisOfPrestataire,\n  sendAvisOfUser\n};","map":{"version":3,"names":["LocalSource","getAllPrestatairesFromLocalSource","getAllPrestataires","response","err","error","status","data","getAvisOfPrestataire","id_prestataire","sendAvisOfUser"],"sources":["/home/aorngom/BUT2/SAE_VUEJS/LeFestivalDesCannes/frontend/src/services/prestataires.service.js"],"sourcesContent":["import LocalSource from \"@/datasource/controller\";\n\nasync function getAllPrestatairesFromLocalSource() {\n    return LocalSource.getAllPrestataires();\n}\n\nasync function getAllPrestataires() {\n    let response;\n    try {\n        // changer la mÃ©thode appelÃ©e quand cette fonctionnalitÃ© l'API est prÃªte\n        response = await getAllPrestatairesFromLocalSource()\n    }\n        // NB: le catch n'aura lieu que pour des requÃªte vers l'API, s'il y a une erreur rÃ©seau\n    catch(err) {\n        response = {error: 1, status: 404, data: 'erreur rÃ©seau, impossible de rÃ©cupÃ©rer la liste des prestataires'  }\n    }\n    return response\n}\n\nasync function getAvisOfPrestataire(id_prestataire){\n    let response;\n    try{\n        response = await LocalSource.getAvisOfPrestataire(id_prestataire);\n    }catch(err){\n        response = {error: 1, status: 404, data: 'erreur réseau, impossible de récupérer la liste des commentaires'  }\n    }\n    return response;\n}\n\nasync function sendAvisOfUser(data){\n    let response;\n    try {\n        response = await LocalSource.sendAvisOfUser(data);\n    }catch (error){\n        response = {error: 1, status: 404, data: 'erreur réseau, impossible de de publier le commmentaire'  }\n    }\n    return response\n}\n\n\nexport default {\n    getAllPrestataires,\n    getAvisOfPrestataire,\n    sendAvisOfUser,\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AAEjD,eAAeC,iCAAiCA,CAAA,EAAG;EAC/C,OAAOD,WAAW,CAACE,kBAAkB,CAAC,CAAC;AAC3C;AAEA,eAAeA,kBAAkBA,CAAA,EAAG;EAChC,IAAIC,QAAQ;EACZ,IAAI;IACA;IACAA,QAAQ,GAAG,MAAMF,iCAAiC,CAAC,CAAC;EACxD;EACI;EACJ,OAAMG,GAAG,EAAE;IACPD,QAAQ,GAAG;MAACE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAuE,CAAC;EACrH;EACA,OAAOJ,QAAQ;AACnB;AAEA,eAAeK,oBAAoBA,CAACC,cAAc,EAAC;EAC/C,IAAIN,QAAQ;EACZ,IAAG;IACCA,QAAQ,GAAG,MAAMH,WAAW,CAACQ,oBAAoB,CAACC,cAAc,CAAC;EACrE,CAAC,QAAML,GAAG,EAAC;IACPD,QAAQ,GAAG;MAACE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAoE,CAAC;EAClH;EACA,OAAOJ,QAAQ;AACnB;AAEA,eAAeO,cAAcA,CAACH,IAAI,EAAC;EAC/B,IAAIJ,QAAQ;EACZ,IAAI;IACAA,QAAQ,GAAG,MAAMH,WAAW,CAACU,cAAc,CAACH,IAAI,CAAC;EACrD,CAAC,QAAOF,KAAK,EAAC;IACVF,QAAQ,GAAG;MAACE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,GAAG;MAAEC,IAAI,EAAE;IAA2D,CAAC;EACzG;EACA,OAAOJ,QAAQ;AACnB;AAGA,eAAe;EACXD,kBAAkB;EAClBM,oBAAoB;EACpBE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}