{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BanniereAccueil from \"@/components/BanniereAccueil.vue\";\nimport CartePrestatairePerso from \"@/components/CartePrestatairePerso.vue\";\nimport { mapState, mapActions } from \"vuex\";\nimport TotalDons from \"@/components/totalDons.vue\";\nimport { filter } from \"core-js/internals/array-iteration\";\nexport default {\n  name: \"PagePrincipale\",\n  data() {\n    return {\n      prestatairesRows: [],\n      filtreSearch: \"\",\n      filtreCategory: ['Activité', 'Mascotte', 'Gastronomie', 'Événement'],\n      filtreType: \"prestataires\"\n    };\n  },\n  computed: {\n    ...mapState('prestataire', ['prestataires']),\n    // on récupère prestataires depuis le store\n    ...mapState('sponsors', ['sponsors'])\n  },\n  methods: {\n    filter,\n    ...mapActions('prestataire', ['getAllPrestataires']),\n    // on récupère la méthode de récupération des prestataires du store\n    ...mapActions('sponsors', ['getAllSponsors']),\n    getPrestaRows() {\n      this.getAllPrestataires(); // charge les prestataires depuis les données\n      let prestataires = this.getFilteredPrestataires(this.prestataires);\n      let rows = [];\n      for (let i = 0; i < prestataires.length; i += 4) {\n        // Ajusté pour 4 blocs par ligne\n        rows.push(prestataires.slice(i, i + 4));\n      }\n      return rows;\n    },\n    getSponsorsRows() {\n      this.getAllSponsors(); // charge les prestataires depuis les données\n      let sponsors = this.getFilteredSponsors(this.sponsors);\n      let rows = [];\n      for (let i = 0; i < sponsors.length; i += 4) {\n        // Ajusté pour 4 blocs par ligne\n        rows.push(sponsors.slice(i, i + 4));\n      }\n      return rows;\n    },\n    // Gère l'envoi de commentaire depuis une page prestataire\n    handleCommentSent(data) {\n      console.log(data);\n      return data;\n    },\n    handleCatFilter(cat) {\n      if (this.filtreCategory.includes(cat)) this.filtreCategory.splice(this.filtreCategory.findIndex(f => f == cat), 1);else this.filtreCategory.push(cat);\n    },\n    getFilteredPrestataires(prestataires) {\n      let catFilteredPrestataires = [];\n      for (const cat of this.filtreCategory) {\n        for (const prest of prestataires) {\n          if (!catFilteredPrestataires.includes(prest) && prest.categorie === cat) catFilteredPrestataires.push(prest);\n        }\n      }\n      console.log(catFilteredPrestataires);\n      return prestataires.filter(p => p.nom.includes(this.filtreSearch) && catFilteredPrestataires.includes(p));\n    },\n    getFilteredSponsors(sponsors) {\n      return sponsors.filter(s => s.nom_sponsor.includes(this.filtreSearch));\n    }\n  },\n  components: {\n    TotalDons,\n    BanniereAccueil,\n    CartePrestatairePerso\n  }\n};","map":{"version":3,"names":["BanniereAccueil","CartePrestatairePerso","mapState","mapActions","TotalDons","filter","name","data","prestatairesRows","filtreSearch","filtreCategory","filtreType","computed","methods","getPrestaRows","getAllPrestataires","prestataires","getFilteredPrestataires","rows","i","length","push","slice","getSponsorsRows","getAllSponsors","sponsors","getFilteredSponsors","handleCommentSent","console","log","handleCatFilter","cat","includes","splice","findIndex","f","catFilteredPrestataires","prest","categorie","p","nom","s","nom_sponsor","components"],"sources":["src/views/PagePrincipale.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <BanniereAccueil></BanniereAccueil>\n    <div class=\"listes-container\">\n      <div class=\"filtre\">\n        <label for=\"search\">Rechercher : </label>\n        <input v-model=\"filtreSearch\" type=\"search\" id=\"search\"><br>\n        <div class=\"filtre-check\" id=\"filtre-type\">\n          <h3>Filtre type :</h3>\n          <input type=\"radio\" id=\"prestataires\" value=\"prestataires\" v-model=\"filtreType\">\n          <label for=\"prestataires\"> Prestataires</label><br>\n          <input type=\"radio\" id=\"sponsors\" v-model=\"filtreType\">\n          <label for=\"sponsors\"> Sponsors</label>\n          <p>{{ filtreType }}</p>\n        </div>\n        <div class=\"filtre-check\" id=\"filtre-cat\" v-if=\"filtreType === 'prestataires'\">\n          <h3>Filtre catégorie : </h3>\n          <input @click=\"handleCatFilter('Activité')\" type=\"checkbox\" id=\"activite\" checked>\n          <label for=\"activite\"> Activite</label><br>\n          <input @click=\"handleCatFilter('Mascotte')\" type=\"checkbox\" id=\"mascotte\" checked>\n          <label for=\"mascotte\"> Mascotte</label><br>\n          <input @click=\"handleCatFilter('Gastronomie')\" type=\"checkbox\" id=\"gastronomie\" checked>\n          <label for=\"gastronomie\"> Gastronomie</label><br>\n          <input @click=\"handleCatFilter('Événement')\" type=\"checkbox\" id=\"evenement\" checked>\n          <label for=\"evenement\"> Événement</label>\n        </div>\n      </div>\n      <div class=\"listes\">\n        <div class=\"liste-prestataires\" id=\"prestataires\" v-if=\"filtreType === 'sponsors'\">\n          <h2>Prestataires</h2>\n          <div class=\"prestataires-row\" v-for=\"row in getPrestaRows()\" :key=\"row[0].id\">\n            <div v-for=\"prestataire in row\" :key=\"prestataire.id\" class=\"prestataire-card\">\n              <CartePrestatairePerso :nom=\"prestataire.nom\" :descriptionAccueil=\"prestataire.description_accueil\"\n                :image=\"prestataire.image\" :pers-page-route=\"`/prestataire/${prestataire.id}`\"></CartePrestatairePerso>\n            </div>\n          </div>\n        </div>\n        <div class=\"liste-prestataires\" id=\"sponsors\" v-if=\"filtreType[1]\">\n          <h2>Sponsors</h2>\n          <div class=\"prestataires-row\" v-for=\"row in getSponsorsRows()\" :key=\"row[0].id_sponsor\">\n            <div v-for=\"sponsor in row\" :key=\"sponsor.id_sponsor\" class=\"prestataire-card\">\n              <CartePrestatairePerso :nom=\"sponsor.nom_sponsor\" :description-accueil=\"sponsor.description_accueil\"\n                :image=\"sponsor.image\" :pers-page-route=\"`/sponsor/${sponsor.id_sponsor}`\"></CartePrestatairePerso>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <TotalDons></TotalDons>\n    <br>\n  </div>\n</template>\n\n\n\n<script>\nimport BanniereAccueil from \"@/components/BanniereAccueil.vue\";\nimport CartePrestatairePerso from \"@/components/CartePrestatairePerso.vue\";\nimport { mapState, mapActions } from \"vuex\";\nimport TotalDons from \"@/components/totalDons.vue\";\nimport { filter } from \"core-js/internals/array-iteration\";\n\nexport default {\n  name: \"PagePrincipale\",\n  data() {\n    return {\n      prestatairesRows: [],\n      filtreSearch: \"\",\n      filtreCategory: ['Activité', 'Mascotte', 'Gastronomie', 'Événement'],\n      filtreType: \"prestataires\",\n    };\n  },\n  computed: {\n    ...mapState('prestataire', ['prestataires']), // on récupère prestataires depuis le store\n    ...mapState('sponsors', ['sponsors']),\n  },\n  methods: {\n    filter,\n    ...mapActions('prestataire', ['getAllPrestataires']), // on récupère la méthode de récupération des prestataires du store\n    ...mapActions('sponsors', ['getAllSponsors']),\n    getPrestaRows() {\n      this.getAllPrestataires(); // charge les prestataires depuis les données\n      let prestataires = this.getFilteredPrestataires(this.prestataires);\n      let rows = [];\n      for (let i = 0; i < prestataires.length; i += 4) { // Ajusté pour 4 blocs par ligne\n        rows.push(prestataires.slice(i, i + 4));\n      }\n      return rows;\n    },\n    getSponsorsRows() {\n      this.getAllSponsors(); // charge les prestataires depuis les données\n      let sponsors = this.getFilteredSponsors(this.sponsors);\n      let rows = [];\n      for (let i = 0; i < sponsors.length; i += 4) { // Ajusté pour 4 blocs par ligne\n        rows.push(sponsors.slice(i, i + 4));\n      }\n      return rows;\n    },\n    // Gère l'envoi de commentaire depuis une page prestataire\n    handleCommentSent(data) {\n      console.log(data);\n      return data;\n    },\n    handleCatFilter(cat) {\n      if (this.filtreCategory.includes(cat)) this.filtreCategory.splice(this.filtreCategory.findIndex((f) => f == cat), 1);\n      else this.filtreCategory.push(cat);\n    },\n    getFilteredPrestataires(prestataires) {\n      let catFilteredPrestataires = [];\n      for (const cat of this.filtreCategory) {\n        for (const prest of prestataires) {\n          if (!catFilteredPrestataires.includes(prest) && prest.categorie === cat)\n            catFilteredPrestataires.push(prest)\n        }\n      }\n      console.log(catFilteredPrestataires);\n      return prestataires.filter((p) => p.nom.includes(this.filtreSearch) && catFilteredPrestataires.includes(p));\n    },\n    getFilteredSponsors(sponsors) {\n      return sponsors.filter(s => s.nom_sponsor.includes(this.filtreSearch));\n    },\n  },\n  components: {\n    TotalDons,\n    BanniereAccueil,\n    CartePrestatairePerso,\n  },\n};\n</script>\n\n\n<style scoped>\n.listes-container{\n  display: flex;\n  flex-direction: row;\n}\n.listes{\n  display: flex;\n  flex-direction: column;\n}\n.liste-prestataires {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n}\n\n.prestataires-row {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.prestataire-card {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: calc(25% - 20px);\n  /* Ajusté pour quatre blocs par ligne avec espace */\n  box-sizing: border-box;\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";AAwDA,OAAAA,eAAA;AACA,OAAAC,qBAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AACA,OAAAC,SAAA;AACA,SAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,YAAA;MACAC,cAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAV,QAAA;IAAA;IACA,GAAAA,QAAA;EACA;EACAW,OAAA;IACAR,MAAA;IACA,GAAAF,UAAA;IAAA;IACA,GAAAA,UAAA;IACAW,cAAA;MACA,KAAAC,kBAAA;MACA,IAAAC,YAAA,QAAAC,uBAAA,MAAAD,YAAA;MACA,IAAAE,IAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAH,YAAA,CAAAI,MAAA,EAAAD,CAAA;QAAA;QACAD,IAAA,CAAAG,IAAA,CAAAL,YAAA,CAAAM,KAAA,CAAAH,CAAA,EAAAA,CAAA;MACA;MACA,OAAAD,IAAA;IACA;IACAK,gBAAA;MACA,KAAAC,cAAA;MACA,IAAAC,QAAA,QAAAC,mBAAA,MAAAD,QAAA;MACA,IAAAP,IAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAM,QAAA,CAAAL,MAAA,EAAAD,CAAA;QAAA;QACAD,IAAA,CAAAG,IAAA,CAAAI,QAAA,CAAAH,KAAA,CAAAH,CAAA,EAAAA,CAAA;MACA;MACA,OAAAD,IAAA;IACA;IACA;IACAS,kBAAApB,IAAA;MACAqB,OAAA,CAAAC,GAAA,CAAAtB,IAAA;MACA,OAAAA,IAAA;IACA;IACAuB,gBAAAC,GAAA;MACA,SAAArB,cAAA,CAAAsB,QAAA,CAAAD,GAAA,QAAArB,cAAA,CAAAuB,MAAA,MAAAvB,cAAA,CAAAwB,SAAA,CAAAC,CAAA,IAAAA,CAAA,IAAAJ,GAAA,WACA,KAAArB,cAAA,CAAAW,IAAA,CAAAU,GAAA;IACA;IACAd,wBAAAD,YAAA;MACA,IAAAoB,uBAAA;MACA,WAAAL,GAAA,SAAArB,cAAA;QACA,WAAA2B,KAAA,IAAArB,YAAA;UACA,KAAAoB,uBAAA,CAAAJ,QAAA,CAAAK,KAAA,KAAAA,KAAA,CAAAC,SAAA,KAAAP,GAAA,EACAK,uBAAA,CAAAf,IAAA,CAAAgB,KAAA;QACA;MACA;MACAT,OAAA,CAAAC,GAAA,CAAAO,uBAAA;MACA,OAAApB,YAAA,CAAAX,MAAA,CAAAkC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAR,QAAA,MAAAvB,YAAA,KAAA2B,uBAAA,CAAAJ,QAAA,CAAAO,CAAA;IACA;IACAb,oBAAAD,QAAA;MACA,OAAAA,QAAA,CAAApB,MAAA,CAAAoC,CAAA,IAAAA,CAAA,CAAAC,WAAA,CAAAV,QAAA,MAAAvB,YAAA;IACA;EACA;EACAkC,UAAA;IACAvC,SAAA;IACAJ,eAAA;IACAC;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}