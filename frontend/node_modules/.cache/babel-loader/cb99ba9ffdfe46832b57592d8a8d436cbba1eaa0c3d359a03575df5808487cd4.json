{"ast":null,"code":"import { prestataires, utilisateurs } from '@/datasource/data';\nimport { mapActions, mapState } from 'vuex';\nimport prestatairesService from \"@/services/prestataires.service\";\nexport default {\n  name: \"PrestataireDetail\",\n  data() {\n    return {\n      prestataire: null\n    };\n  },\n  methods: {\n    getUtilisateur(id) {\n      return utilisateurs.find(u => u['id_utilisateur'] === id);\n    },\n    // Envoie les données entrée dans le formulaire de commentaire sous forme d'événement\n    sendCommentForm() {\n      // Il faudra ajouter l'id de l'utilisateur courant lorsqu'il existera !\n      let data = [this.prestataire['id'], this.user_note, this.user_comment, this.utilisateur.id];\n      console.log(data);\n      // Appeler la méthode pour insérer un commentaire ici -- à faire lorsque la connexion des utilisateurs sera implémentée.\n      prestatairesService.sendAvisOfUser(data);\n      this.getPrestataireAvis(this.prestataire['id']);\n    }\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur']),\n    ...mapState('prestataire', [\"avis_prestataire\"])\n  },\n  created() {\n    const id = this.$route.params.id;\n    this.prestataire = prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale\n    this.getPrestataireAvis(this.prestataire['id']); // récupère les avis du prestataire\n  }\n};","map":{"version":3,"names":["prestataires","utilisateurs","mapActions","mapState","prestatairesService","name","data","prestataire","methods","getUtilisateur","id","find","u","sendCommentForm","user_note","user_comment","utilisateur","console","log","sendAvisOfUser","getPrestataireAvis","computed","created","$route","params","p"],"sources":["src/views/PageDon.vue"],"sourcesContent":["<template>\n    <div class=\"prestataire-detail\" v-if=\"prestataire\">\n      \n    </div>\n    <div v-else>\n      <p>Chargement des données...</p>\n    </div>\n  </template>\n  \n  <script>\n  import {prestataires, utilisateurs} from '@/datasource/data';\n  import {mapActions, mapState} from 'vuex';\n  import prestatairesService from \"@/services/prestataires.service\";\n  \n  \n  export default {\n    name: \"PrestataireDetail\",\n    data() {\n      return {\n        prestataire: null,\n      };\n    },\n    methods:{\n      getUtilisateur(id){\n        return utilisateurs.find(u => u['id_utilisateur'] === id);\n      },\n      // Envoie les données entrée dans le formulaire de commentaire sous forme d'événement\n      sendCommentForm(){\n        // Il faudra ajouter l'id de l'utilisateur courant lorsqu'il existera !\n        let data = [this.prestataire['id'],this.user_note, this.user_comment, this.utilisateur.id];\n        console.log(data);\n        // Appeler la méthode pour insérer un commentaire ici -- à faire lorsque la connexion des utilisateurs sera implémentée.\n        prestatairesService.sendAvisOfUser(data);\n        this.getPrestataireAvis(this.prestataire['id']);\n      }\n    },\n    computed: {\n      ...mapState('utilisateurs', ['utilisateur']),\n      ...mapState('prestataire', [\"avis_prestataire\"])\n    },\n    created() {\n      const id = this.$route.params.id;\n      this.prestataire = prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale\n      this.getPrestataireAvis(this.prestataire['id']) // récupère les avis du prestataire\n    },\n  };\n  </script>\n  \n  <style scoped>\n  </style>"],"mappings":"AAUA,SAAAA,YAAA,EAAAC,YAAA;AACA,SAAAC,UAAA,EAAAC,QAAA;AACA,OAAAC,mBAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,EAAA;MACA,OAAAT,YAAA,CAAAU,IAAA,CAAAC,CAAA,IAAAA,CAAA,uBAAAF,EAAA;IACA;IACA;IACAG,gBAAA;MACA;MACA,IAAAP,IAAA,SAAAC,WAAA,aAAAO,SAAA,OAAAC,YAAA,OAAAC,WAAA,CAAAN,EAAA;MACAO,OAAA,CAAAC,GAAA,CAAAZ,IAAA;MACA;MACAF,mBAAA,CAAAe,cAAA,CAAAb,IAAA;MACA,KAAAc,kBAAA,MAAAb,WAAA;IACA;EACA;EACAc,QAAA;IACA,GAAAlB,QAAA;IACA,GAAAA,QAAA;EACA;EACAmB,QAAA;IACA,MAAAZ,EAAA,QAAAa,MAAA,CAAAC,MAAA,CAAAd,EAAA;IACA,KAAAH,WAAA,GAAAP,YAAA,CAAAW,IAAA,CAAAc,CAAA,IAAAA,CAAA,CAAAf,EAAA,KAAAA,EAAA;IACA,KAAAU,kBAAA,MAAAb,WAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}