{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { prestataires, billetterie, utilisateurs, avis, dons, sponsors, map_data } from \"./data\";\nimport bcrypt from 'bcryptjs';\nfunction getAllPrestataires() {\n  return {\n    error: 0,\n    data: prestataires\n  };\n}\nfunction getAllSponsors() {\n  return {\n    error: 0,\n    data: sponsors\n  };\n}\nfunction getAllMapData() {\n  return {\n    error: 0,\n    data: map_data\n  };\n}\nfunction insertCommandeBillet(vue, total) {\n  try {\n    const lastBilletterie = billetterie.length > 0 ? billetterie[billetterie.length - 1] : null;\n    let newId = lastBilletterie ? lastBilletterie.id_billetterie + 1 : 1;\n    let ticketQuantity = 0;\n    for (let i = 0; i < vue.form.tickets.length; i++) {\n      ticketQuantity += vue.form.tickets[i].quantity;\n    }\n    let insert = {\n      \"id_billetterie\": newId,\n      \"nombre_billets\": ticketQuantity,\n      \"prix_total\": total,\n      \"date_achat\": new Date().toISOString().split('T')[0],\n      \"email\": vue.form.email\n    };\n\n    // Ajouter l'objet à billetterie\n    billetterie.push(insert);\n    console.log(billetterie);\n    return {\n      error: 0,\n      status: 200\n    };\n  } catch (error) {\n    console.error(\"Erreur lors de l'ajout de la billetterie :\", error.message);\n    return {\n      error: 1,\n      status: 404,\n      data: \"Erreur lors de l'ajout de la billetterie :\" + error.message\n    };\n  }\n}\nasync function connexion(login, mdp) {\n  if (!login) return {\n    error: 1,\n    status: 404,\n    data: \"Le login donné n'est pas valide\"\n  };\n  if (!mdp) return {\n    error: 1,\n    status: 404,\n    data: \"Le mot de passe donné n'est pas valide\"\n  };\n  let Account = utilisateurs.find(u => u.email_utilisateur === login);\n  if (!Account) return {\n    error: 1,\n    status: 404,\n    data: \"Aucun utilisateur n'est lié à ce login\"\n  };\n  try {\n    const correspond = await bcrypt.compare(mdp, Account.mot_de_passe);\n    if (correspond) {\n      return {\n        error: 0,\n        status: 200,\n        data: Account\n      };\n    } else {\n      return {\n        error: 1,\n        status: 404,\n        data: \"Le mot de passe ne correspond pas\"\n      };\n    }\n  } catch (error) {\n    console.error('Erreur lors de la vérification du mot de passe :', error);\n  }\n}\nasync function getAvisOfPrestataire(prestataire_id) {\n  if (!prestataire_id) return {\n    error: 1,\n    status: 404,\n    data: \"L'identifiant donné n'est pas valide\"\n  };\n  let prest_commentaires = [];\n  avis.forEach(a => {\n    if (parseInt(a['id_prestataire']) === parseInt(prestataire_id)) {\n      prest_commentaires.push(a);\n    }\n  });\n  return {\n    error: 0,\n    status: 200,\n    data: prest_commentaires\n  };\n}\nasync function sendAvisOfUser(data) {\n  try {\n    let newId = avis.length + 1;\n    let insert = {\n      id_commentaire: newId,\n      id_prestataire: parseInt(data[0]),\n      id_utilisateur: data[3],\n      texte: data[2],\n      note: data[1]\n    };\n    avis.push(insert);\n    return {\n      error: 0,\n      status: 200\n    };\n  } catch (error) {\n    return {\n      error: 1,\n      status: 404,\n      data: \"Erreur lors de l'ajout de l'avis :\" + error.message\n    };\n  }\n}\nasync function totalDons() {\n  try {\n    let total = 0;\n    for (let i = 0; i < dons.length; i++) {\n      total += dons[i].montant;\n    }\n    return {\n      error: 0,\n      status: 200,\n      data: total\n    };\n  } catch (error) {\n    return {\n      error: 1,\n      status: 404,\n      data: error.message\n    };\n  }\n}\nasync function getTotalDonsOf(prestId) {\n  try {\n    let total = 0;\n    for (let i = 0; i < dons.length; i++) {\n      if (dons[i].id_prestataire == prestId) total += dons[i].montant;\n    }\n    return {\n      error: 0,\n      status: 200,\n      data: total\n    };\n  } catch (error) {\n    return {\n      error: 1,\n      status: 404,\n      data: error.message\n    };\n  }\n}\nasync function makeDonation(userId, prestaId, amount, message) {\n  try {\n    if (amount <= 0) return {\n      error: 1,\n      status: 500,\n      data: \"Montant de don invalide\"\n    };\n    let prestataire = prestataires.find(p => p.id === prestaId);\n    if (!prestataire) return {\n      error: 1,\n      status: 404,\n      data: \"Prestataire invalide\"\n    };\n    let user = utilisateurs.find(u => u.id === userId);\n    if (!user) return {\n      error: 1,\n      status: 500,\n      data: \"Utilisateur invalide\"\n    };\n    let newId = dons.length + 1;\n    let insert = {\n      id: newId,\n      id_utilisateur: userId,\n      id_prestataire: prestaId,\n      message: message,\n      montant: amount,\n      date: getFormattedDate()\n    };\n    dons.push(insert);\n    return {\n      error: 0,\n      status: 200,\n      data: insert\n    };\n  } catch (error) {\n    return {\n      error: 1,\n      status: 500,\n      data: error.message\n    };\n  }\n}\nasync function signUp(login, mdp, numero, username, adresse, codePrest) {\n  try {\n    console.log(codePrest);\n    let Account = utilisateurs.find(u => u.email_utilisateur === login);\n    if (Account) return {\n      error: 1,\n      status: 404,\n      data: \"Cette email a déjà été utilisé \"\n    };\n    let newId = utilisateurs.length + 1;\n    let insert = {\n      id_utilisateur: newId,\n      nom_utilisateur: username,\n      email_utilisateur: login,\n      mot_de_passe: await bcrypt.hash(mdp, 10),\n      adresse_utilisateur: adresse,\n      telephone: numero,\n      date_inscription: getFormattedDate(),\n      role: \"utilisateur\"\n    };\n    //console.log(bcrypt.hash(mdp, 10));\n    utilisateurs.push(insert);\n    return {\n      error: 0,\n      status: 200,\n      data: insert\n    };\n  } catch (error) {\n    return {\n      error: 1,\n      status: 500,\n      data: error.message\n    };\n  }\n}\nfunction getFormattedDate() {\n  const date = new Date();\n  const day = String(date.getDate()).padStart(2, '0'); // Jour (2 chiffres)\n  const month = String(date.getMonth() + 1).padStart(2, '0'); // Mois (2 chiffres, +1 car janvier est 0)\n  const year = date.getFullYear(); // Année (4 chiffres)\n\n  const hours = String(date.getHours()).padStart(2, '0'); // Heures (2 chiffres)\n  const minutes = String(date.getMinutes()).padStart(2, '0'); // Minutes (2 chiffres)\n  const seconds = String(date.getSeconds()).padStart(2, '0'); // Secondes (2 chiffres)\n\n  return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\nfunction getAllUsers() {\n  return {\n    error: 0,\n    data: utilisateurs\n  };\n}\nexport default {\n  getAllPrestataires,\n  getAllSponsors,\n  insertCommandeBillet,\n  connexion,\n  getAvisOfPrestataire,\n  sendAvisOfUser,\n  totalDons,\n  signUp,\n  getAllUsers,\n  getAllMapData,\n  getTotalDonsOf\n};","map":{"version":3,"names":["prestataires","billetterie","utilisateurs","avis","dons","sponsors","map_data","bcrypt","getAllPrestataires","error","data","getAllSponsors","getAllMapData","insertCommandeBillet","vue","total","lastBilletterie","length","newId","id_billetterie","ticketQuantity","i","form","tickets","quantity","insert","Date","toISOString","split","email","push","console","log","status","message","connexion","login","mdp","Account","find","u","email_utilisateur","correspond","compare","mot_de_passe","getAvisOfPrestataire","prestataire_id","prest_commentaires","forEach","a","parseInt","sendAvisOfUser","id_commentaire","id_prestataire","id_utilisateur","texte","note","totalDons","montant","getTotalDonsOf","prestId","makeDonation","userId","prestaId","amount","prestataire","p","id","user","date","getFormattedDate","signUp","numero","username","adresse","codePrest","nom_utilisateur","hash","adresse_utilisateur","telephone","date_inscription","role","day","String","getDate","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","getAllUsers"],"sources":["/home/raskiel/Code/Code BUT/Annee2/SAE_S3-S4/frontend/src/datasource/controller.js"],"sourcesContent":["import { prestataires, billetterie, utilisateurs, avis, dons, sponsors, map_data } from \"./data\";\nimport bcrypt from 'bcryptjs';\n\nfunction getAllPrestataires() {\n    return { error: 0, data: prestataires };\n}\n\nfunction getAllSponsors() {\n    return { error: 0, data: sponsors };\n}\n\nfunction getAllMapData() {\n    return { error: 0, data: map_data };\n}\n\nfunction insertCommandeBillet(vue, total) {\n    try {\n        const lastBilletterie = billetterie.length > 0 ? billetterie[billetterie.length - 1] : null;\n\n        let newId = lastBilletterie ? lastBilletterie.id_billetterie + 1 : 1;\n        let ticketQuantity = 0;\n        for (let i = 0; i < vue.form.tickets.length; i++) {\n            ticketQuantity += vue.form.tickets[i].quantity;\n        }\n\n        let insert = {\n            \"id_billetterie\": newId,\n            \"nombre_billets\": ticketQuantity,\n            \"prix_total\": total,\n            \"date_achat\": new Date().toISOString().split('T')[0],\n            \"email\": vue.form.email,\n        };\n\n        // Ajouter l'objet à billetterie\n        billetterie.push(insert);\n        console.log(billetterie)\n        return { error: 0, status: 200 }\n\n    } catch (error) {\n        console.error(\"Erreur lors de l'ajout de la billetterie :\", error.message);\n        return { error: 1, status: 404, data: \"Erreur lors de l'ajout de la billetterie :\" + error.message }\n    }\n}\n\nasync function connexion(login, mdp) {\n    if (!login) return { error: 1, status: 404, data: \"Le login donné n'est pas valide\" };\n    if (!mdp) return { error: 1, status: 404, data: \"Le mot de passe donné n'est pas valide\" };\n\n    let Account = utilisateurs.find(u => u.email_utilisateur === login);\n    if (!Account) return { error: 1, status: 404, data: \"Aucun utilisateur n'est lié à ce login\" };\n\n\n    try {\n        const correspond = await bcrypt.compare(mdp, Account.mot_de_passe);\n        if (correspond) {\n            return { error: 0, status: 200, data: Account };\n        } else {\n            return { error: 1, status: 404, data: \"Le mot de passe ne correspond pas\" };\n        }\n    } catch (error) {\n        console.error('Erreur lors de la vérification du mot de passe :', error);\n    }\n}\n\nasync function getAvisOfPrestataire(prestataire_id) {\n    if (!prestataire_id) return { error: 1, status: 404, data: \"L'identifiant donné n'est pas valide\" };\n    let prest_commentaires = [];\n    avis.forEach((a) => {\n        if (parseInt(a['id_prestataire']) === parseInt(prestataire_id)) {\n            prest_commentaires.push(a);\n        }\n    })\n    return { error: 0, status: 200, data: prest_commentaires };\n}\n\nasync function sendAvisOfUser(data) {\n    try {\n        let newId = avis.length + 1;\n        let insert = {\n            id_commentaire: newId,\n            id_prestataire: parseInt(data[0]),\n            id_utilisateur: data[3],\n            texte: data[2],\n            note: data[1],\n        };\n        avis.push(insert);\n        return { error: 0, status: 200 }\n    } catch (error) {\n        return { error: 1, status: 404, data: \"Erreur lors de l'ajout de l'avis :\" + error.message }\n    }\n}\n\nasync function totalDons() {\n    try {\n        let total = 0;\n        for (let i = 0; i < dons.length; i++) {\n            total += dons[i].montant;\n        }\n        return { error: 0, status: 200, data: total }\n    } catch (error) {\n        return { error: 1, status: 404, data: error.message }\n    }\n\n}\n\nasync function getTotalDonsOf(prestId) {\n    try {\n        let total = 0;\n        for (let i = 0; i < dons.length; i++) {\n            if (dons[i].id_prestataire == prestId) total += dons[i].montant;\n        }\n        return { error: 0, status: 200, data: total }\n    } catch (error) {\n        return { error: 1, status: 404, data: error.message }\n    }\n}\n\nasync function makeDonation(userId, prestaId, amount, message) {\n    try {\n        if (amount <= 0) return { error: 1, status: 500, data: \"Montant de don invalide\" };\n        let prestataire = prestataires.find(p => p.id === prestaId);\n        if(!prestataire) return { error: 1, status: 404, data: \"Prestataire invalide\" };\n        let user = utilisateurs.find(u => u.id === userId);\n        if(!user) return { error: 1, status: 500, data: \"Utilisateur invalide\" };\n\n        let newId = dons.length + 1;\n        let insert = {\n            id: newId,\n            id_utilisateur: userId,\n            id_prestataire: prestaId,\n            message: message,\n            montant: amount,\n            date: getFormattedDate(),\n        };\n        dons.push(insert);\n        return {error: 0, status: 200, data: insert};\n    }catch(error){\n        return { error: 1, status: 500, data: error.message }\n    }\n}\n\nasync function signUp(login, mdp, numero, username, adresse, codePrest) {\n    try {\n\n        console.log(codePrest)\n        let Account = utilisateurs.find(u => u.email_utilisateur === login);\n        if (Account) return { error: 1, status: 404, data: \"Cette email a déjà été utilisé \" }\n\n        let newId = utilisateurs.length + 1;\n        let insert = {\n            id_utilisateur: newId,\n            nom_utilisateur: username,\n            email_utilisateur: login,\n            mot_de_passe: await bcrypt.hash(mdp, 10),\n            adresse_utilisateur: adresse,\n            telephone: numero,\n            date_inscription: getFormattedDate(),\n            role: \"utilisateur\"\n        };\n        //console.log(bcrypt.hash(mdp, 10));\n        utilisateurs.push(insert);\n        return { error: 0, status: 200, data: insert }\n    } catch (error) {\n        return { error: 1, status: 500, data: error.message }\n    }\n}\n\nfunction getFormattedDate() {\n    const date = new Date();\n\n    const day = String(date.getDate()).padStart(2, '0');         // Jour (2 chiffres)\n    const month = String(date.getMonth() + 1).padStart(2, '0');  // Mois (2 chiffres, +1 car janvier est 0)\n    const year = date.getFullYear();                             // Année (4 chiffres)\n\n    const hours = String(date.getHours()).padStart(2, '0');      // Heures (2 chiffres)\n    const minutes = String(date.getMinutes()).padStart(2, '0');  // Minutes (2 chiffres)\n    const seconds = String(date.getSeconds()).padStart(2, '0');  // Secondes (2 chiffres)\n\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\n}\n\nfunction getAllUsers() {\n    return { error: 0, data: utilisateurs };\n}\n\nexport default {\n    getAllPrestataires,\n    getAllSponsors,\n    insertCommandeBillet,\n    connexion,\n    getAvisOfPrestataire,\n    sendAvisOfUser,\n    totalDons,\n    signUp,\n    getAllUsers,\n    getAllMapData,\n    getTotalDonsOf,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}