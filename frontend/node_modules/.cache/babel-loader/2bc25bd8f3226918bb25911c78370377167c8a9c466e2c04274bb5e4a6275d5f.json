{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapState } from 'vuex';\nimport prestatairesService from \"@/services/prestataires.service\";\nexport default {\n  name: \"PageDon\",\n  data() {\n    return {\n      prestataire: null\n    };\n  },\n  methods: {\n    getUtilisateur(id) {\n      return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n    },\n    // Envoie les données entrée dans le formulaire de commentaire sous forme d'événement\n    sendCommentForm() {\n      let data = [this.prestataire['id'], this.user_note, this.user_comment, this.utilisateur.id];\n      console.log(data);\n      // Appeler la méthode pour insérer un commentaire ici -- à faire lorsque la connexion des utilisateurs sera implémentée.\n      prestatairesService.sendAvisOfUser(data);\n      this.getPrestataireAvis(this.prestataire['id']);\n    },\n    makeDonation() {\n      const id = this.$route.params.id;\n      this.$router.push('/dons/' + id);\n    }\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n    ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n  },\n  created() {\n    const id = this.$route.params.id;\n    this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale\n    this.getPrestataireAvis(this.prestataire['id']); // récupère les avis du prestataire\n  }\n};","map":{"version":3,"names":["mapActions","mapState","prestatairesService","name","data","prestataire","methods","getUtilisateur","id","utilisateurs","find","u","sendCommentForm","user_note","user_comment","utilisateur","console","log","sendAvisOfUser","getPrestataireAvis","makeDonation","$route","params","$router","push","computed","created","prestataires","p"],"sources":["src/views/PageDon.vue"],"sourcesContent":["<template>\n    <div class=\"prestataire-detail\" v-if=\"prestataire\">\n      \n    </div>\n    <div v-else>\n      <p>Chargement des données...</p>\n    </div>\n  </template>\n  \n  <script>\nimport {mapActions, mapState} from 'vuex';\nimport prestatairesService from \"@/services/prestataires.service\";\n\n\nexport default {\n  name: \"PageDon\",\n  data() {\n    return {\n      prestataire: null,\n    };\n  },\n  methods:{\n    getUtilisateur(id){\n      return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n    },\n    // Envoie les données entrée dans le formulaire de commentaire sous forme d'événement\n    sendCommentForm(){\n      let data = [this.prestataire['id'],this.user_note, this.user_comment, this.utilisateur.id];\n      console.log(data);\n      // Appeler la méthode pour insérer un commentaire ici -- à faire lorsque la connexion des utilisateurs sera implémentée.\n      prestatairesService.sendAvisOfUser(data);\n      this.getPrestataireAvis(this.prestataire['id']);\n    },\n    makeDonation(){\n      const id = this.$route.params.id;\n      this.$router.push('/dons/'+id)\n    }\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n    ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n  },\n  created() {\n    const id = this.$route.params.id;\n    this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale\n    this.getPrestataireAvis(this.prestataire['id']) // récupère les avis du prestataire\n  },\n};\n</script>\n  \n  <style scoped>\n  </style>"],"mappings":";AAUA,SAAAA,UAAA,EAAAC,QAAA;AACA,OAAAC,mBAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAAC,EAAA;MACA,YAAAC,YAAA,CAAAC,IAAA,CAAAC,CAAA,IAAAA,CAAA,uBAAAH,EAAA;IACA;IACA;IACAI,gBAAA;MACA,IAAAR,IAAA,SAAAC,WAAA,aAAAQ,SAAA,OAAAC,YAAA,OAAAC,WAAA,CAAAP,EAAA;MACAQ,OAAA,CAAAC,GAAA,CAAAb,IAAA;MACA;MACAF,mBAAA,CAAAgB,cAAA,CAAAd,IAAA;MACA,KAAAe,kBAAA,MAAAd,WAAA;IACA;IACAe,aAAA;MACA,MAAAZ,EAAA,QAAAa,MAAA,CAAAC,MAAA,CAAAd,EAAA;MACA,KAAAe,OAAA,CAAAC,IAAA,YAAAhB,EAAA;IACA;EACA;EACAiB,QAAA;IACA,GAAAxB,QAAA;IACA,GAAAA,QAAA;EACA;EACAyB,QAAA;IACA,MAAAlB,EAAA,QAAAa,MAAA,CAAAC,MAAA,CAAAd,EAAA;IACA,KAAAH,WAAA,QAAAsB,YAAA,CAAAjB,IAAA,CAAAkB,CAAA,IAAAA,CAAA,CAAApB,EAAA,KAAAA,EAAA;IACA,KAAAW,kBAAA,MAAAd,WAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}