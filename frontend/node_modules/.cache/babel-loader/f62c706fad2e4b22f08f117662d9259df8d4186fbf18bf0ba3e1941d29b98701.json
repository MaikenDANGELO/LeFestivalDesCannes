{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { prestataires, billetterie, utilisateurs, commentaires, notes } from \"./data\";\nimport bcrypt from 'bcryptjs';\nfunction getAllPrestataires() {\n  return {\n    error: 0,\n    data: prestataires\n  };\n}\nfunction insertCommandeBillet(vue, total) {\n  try {\n    const lastBilletterie = billetterie.length > 0 ? billetterie[billetterie.length - 1] : null;\n    let newId = lastBilletterie ? lastBilletterie.id_billetterie + 1 : 1;\n    let ticketQuantity = 0;\n    for (let i = 0; i < vue.form.tickets.length; i++) {\n      ticketQuantity += vue.form.tickets[i].quantity;\n    }\n    let insert = {\n      \"id_billetterie\": newId,\n      \"nombre_billets\": ticketQuantity,\n      \"prix_total\": total,\n      \"date_achat\": new Date().toISOString().split('T')[0],\n      \"email\": vue.form.email\n    };\n\n    // Ajouter l'objet à billetterie\n    billetterie.push(insert);\n    return {\n      error: 0,\n      status: 200\n    };\n  } catch (error) {\n    console.error(\"Erreur lors de l'ajout de la billetterie :\", error.message);\n    return {\n      error: 1,\n      status: 404\n    };\n  }\n}\nasync function connexion(login, mdp) {\n  if (!login) return {\n    error: 1,\n    status: 404,\n    data: \"Le login donné n'est pas valide\"\n  };\n  if (!mdp) return {\n    error: 1,\n    status: 404,\n    data: \"Le mot de passe donné n'est pas valide\"\n  };\n  let Account = utilisateurs.find(u => u.email_utilisateur === login);\n  if (!Account) return {\n    error: 1,\n    status: 404,\n    data: \"Aucun utilisateur n'est lié à ce login\"\n  };\n  try {\n    const correspond = await bcrypt.compare(mdp, Account.mot_de_passe);\n    if (correspond) {\n      return {\n        error: 0,\n        status: 200,\n        data: Account.role\n      };\n    } else {\n      return {\n        error: 1,\n        status: 404,\n        data: \"Le mot de passe ne correspond pas\"\n      };\n    }\n  } catch (error) {\n    console.error('Erreur lors de la vérification du mot de passe :', error);\n  }\n}\nasync function getCommentairesOfPrestataire(prestataire_id) {\n  if (!prestataire_id) return {\n    error: 1,\n    status: 404,\n    data: \"L'identifiant donné n'est pas valide\"\n  };\n  let prest_commentaires = [];\n}\nexport default {\n  getAllPrestataires,\n  insertCommandeBillet,\n  connexion,\n  getCommentairesOfPrestataire\n};","map":{"version":3,"names":["prestataires","billetterie","utilisateurs","commentaires","notes","bcrypt","getAllPrestataires","error","data","insertCommandeBillet","vue","total","lastBilletterie","length","newId","id_billetterie","ticketQuantity","i","form","tickets","quantity","insert","Date","toISOString","split","email","push","status","console","message","connexion","login","mdp","Account","find","u","email_utilisateur","correspond","compare","mot_de_passe","role","getCommentairesOfPrestataire","prestataire_id","prest_commentaires"],"sources":["/home/raskiel/Code/Code BUT/Annee2/SAE_S3-S4/frontend/src/datasource/controller.js"],"sourcesContent":["import { prestataires, billetterie, utilisateurs, commentaires, notes } from \"./data\";\nimport bcrypt from 'bcryptjs';\n\nfunction getAllPrestataires() {\n    return { error: 0, data: prestataires };\n}\n\nfunction insertCommandeBillet(vue, total){\n    try{\n    const lastBilletterie = billetterie.length > 0 ? billetterie[billetterie.length - 1] : null;\n\n    let newId = lastBilletterie ? lastBilletterie.id_billetterie + 1 : 1;\n    let ticketQuantity = 0;\n        for (let i = 0; i < vue.form.tickets.length; i++) {\n            ticketQuantity += vue.form.tickets[i].quantity;\n        }\n\n    let insert = {\n        \"id_billetterie\": newId,\n        \"nombre_billets\": ticketQuantity,\n        \"prix_total\": total,\n        \"date_achat\": new Date().toISOString().split('T')[0],\n        \"email\": vue.form.email,\n    };\n\n    // Ajouter l'objet à billetterie\n    billetterie.push(insert);\n    return {error: 0, status: 200}\n\n    } catch (error) {\n        console.error(\"Erreur lors de l'ajout de la billetterie :\", error.message);\n        return {error: 1, status: 404}\n    }\n}\n\nasync function connexion(login, mdp){\n    if(!login) return {error: 1, status: 404, data: \"Le login donné n'est pas valide\"};\n    if(!mdp) return {error: 1, status: 404, data: \"Le mot de passe donné n'est pas valide\"};\n\n    let Account = utilisateurs.find(u => u.email_utilisateur === login);\n    if (!Account) return {error: 1, status: 404, data: \"Aucun utilisateur n'est lié à ce login\"};\n\n\n    try {\n        const correspond = await bcrypt.compare(mdp, Account.mot_de_passe);\n        if (correspond) {\n            return {error: 0, status: 200, data: Account.role};\n        } else {\n            return {error: 1, status: 404, data: \"Le mot de passe ne correspond pas\"};\n        }\n    } catch (error) {\n        console.error('Erreur lors de la vérification du mot de passe :', error);\n    }\n}\n\nasync function getCommentairesOfPrestataire(prestataire_id) {\n    if(!prestataire_id) return {error: 1, status: 404, data: \"L'identifiant donné n'est pas valide\"};\n    let prest_commentaires = [];\n}\n\n\nexport default {\n    getAllPrestataires,\n    insertCommandeBillet,\n    connexion,\n    getCommentairesOfPrestataire,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}