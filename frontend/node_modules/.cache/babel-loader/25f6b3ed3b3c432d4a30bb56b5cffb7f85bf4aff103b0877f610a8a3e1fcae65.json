{"ast":null,"code":"/*\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport PrestatairesService from \"../services/prestataires.service\";\nimport MoneyService from \"../services/money.service\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: () => ({\n    prestataires: [],\n    utilisateur: {\n      role: '',\n      nom: '',\n      id: 0,\n      estConnecte:false,\n    },\n    avis_prestataire: [],\n    totalDons:0\n\n  }),\n  getters: {},\n  mutations: {\n    updatePrestataires: (state, prestataires) => {\n      state.prestataires = prestataires;\n    },\n    SET_USER(state, user) {\n      state.utilisateur.nom = user.nom_utilisateur;\n      state.utilisateur.role = user.role;\n      state.utilisateur.id = user.id_utilisateur\n      state.utilisateur.estConnecte = true\n    },\n    LOGOUT(state) {\n      state.utilisateur = {\n        role: '',\n        nom: '',\n        id:0,\n        estConnecte: false,\n      };\n\n    },\n    updateAvisPrestataire: (state, avis_prestataire) => {\n      state.avis_prestataire = avis_prestataire;\n    },\n    updateTotalDons:(state, total) => {\n      state.totalDons = total;\n    },\n  },\n  actions: {\n    async getAllPrestataires({ commit }) {\n      console.log(\"récupération des prestataires\");\n      let response = await PrestatairesService.getAllPrestataires();\n      if (response.error === 0) {\n        commit(\"updatePrestataires\", response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getPrestataireAvis({commit}, id_prestataire) {\n      console.log(\"récupération des avis du prestataire \"+id_prestataire);\n      let response = await PrestatairesService.getAvisOfPrestataire(id_prestataire);\n      if (response.error === 0){\n        commit(\"updateAvisPrestataire\", response.data);\n      }else{\n        console.log(response.data);\n      }\n    },\n    logout({ commit }) {\n      commit('LOGOUT');\n    },\n    async logIn({ commit }, data){\n      commit('SET_USER', data)\n    },\n    async getTotalDons({ commit }){\n      let response = await MoneyService.getTotalDons();\n      if (response.error === 0){\n        commit(\"updateTotalDons\", response.data);\n      }else{\n        console.log(response.data);\n      }\n    },\n  },\n  modules: {},\n});\n*/\n\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport don from \"./modules/don\";\nimport utilisateurs from \"./modules/utilisateurs\";\nimport prestataire from \"./modules/prestataire\";\nimport sponsors from \"./modules/sponsors\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  modules: {\n    don,\n    utilisateurs,\n    prestataire,\n    sponsors\n  }\n});","map":{"version":3,"names":["Vue","Vuex","don","utilisateurs","prestataire","sponsors","use","Store","modules"],"sources":["/home/aorngom/BUT2/SAE_VUEJS/LeFestivalDesCannes/frontend/src/store/index.js"],"sourcesContent":["/*\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport PrestatairesService from \"../services/prestataires.service\";\nimport MoneyService from \"../services/money.service\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: () => ({\n    prestataires: [],\n    utilisateur: {\n      role: '',\n      nom: '',\n      id: 0,\n      estConnecte:false,\n    },\n    avis_prestataire: [],\n    totalDons:0\n\n  }),\n  getters: {},\n  mutations: {\n    updatePrestataires: (state, prestataires) => {\n      state.prestataires = prestataires;\n    },\n    SET_USER(state, user) {\n      state.utilisateur.nom = user.nom_utilisateur;\n      state.utilisateur.role = user.role;\n      state.utilisateur.id = user.id_utilisateur\n      state.utilisateur.estConnecte = true\n    },\n    LOGOUT(state) {\n      state.utilisateur = {\n        role: '',\n        nom: '',\n        id:0,\n        estConnecte: false,\n      };\n\n    },\n    updateAvisPrestataire: (state, avis_prestataire) => {\n      state.avis_prestataire = avis_prestataire;\n    },\n    updateTotalDons:(state, total) => {\n      state.totalDons = total;\n    },\n  },\n  actions: {\n    async getAllPrestataires({ commit }) {\n      console.log(\"récupération des prestataires\");\n      let response = await PrestatairesService.getAllPrestataires();\n      if (response.error === 0) {\n        commit(\"updatePrestataires\", response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getPrestataireAvis({commit}, id_prestataire) {\n      console.log(\"récupération des avis du prestataire \"+id_prestataire);\n      let response = await PrestatairesService.getAvisOfPrestataire(id_prestataire);\n      if (response.error === 0){\n        commit(\"updateAvisPrestataire\", response.data);\n      }else{\n        console.log(response.data);\n      }\n    },\n    logout({ commit }) {\n      commit('LOGOUT');\n    },\n    async logIn({ commit }, data){\n      commit('SET_USER', data)\n    },\n    async getTotalDons({ commit }){\n      let response = await MoneyService.getTotalDons();\n      if (response.error === 0){\n        commit(\"updateTotalDons\", response.data);\n      }else{\n        console.log(response.data);\n      }\n    },\n  },\n  modules: {},\n});\n*/\n\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport don from \"./modules/don\";\nimport utilisateurs from \"./modules/utilisateurs\";\nimport prestataire from \"./modules/prestataire\";\nimport sponsors from \"./modules/sponsors\";\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  modules: {\n    don,\n    utilisateurs,\n    prestataire,\n    sponsors,\n  },\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,QAAQ,MAAM,oBAAoB;AAEzCL,GAAG,CAACM,GAAG,CAACL,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACM,KAAK,CAAC;EAC5BC,OAAO,EAAE;IACPN,GAAG;IACHC,YAAY;IACZC,WAAW;IACXC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}