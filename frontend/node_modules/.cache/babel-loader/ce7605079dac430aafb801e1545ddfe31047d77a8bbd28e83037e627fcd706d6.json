{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  name: \"PageDon\",\n  data() {\n    return {\n      prestataire: null,\n      premadeAmount: [\"5\", \"10\", \"20\"],\n      userInput: \"0\",\n      montantDon: \"5\",\n      isDonValide: true\n    };\n  },\n  methods: {\n    ...mapActions('prestataire', ['getAllPrestataires']),\n    ...mapActions('utilisateurs', ['getAllUsers']),\n    getUtilisateur(id) {\n      return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n    },\n    checkIsMontantValide() {\n      if (this.montantDon > 0) this.isDonValide = true;else this.isDonValide = false;\n    },\n    updateMontantDon() {\n      if (parseInt(this.userInput) && this.userInput > 0) {\n        this.montantDon = this.userInput;\n        this.isDonValide = true;\n      } else {\n        this.isDonValide = false;\n      }\n    }\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n    ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n  },\n  async created() {\n    await this.getAllPrestataires();\n    await this.getAllUsers();\n    const id = this.$route.params.id;\n    this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale    \n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","prestataire","premadeAmount","userInput","montantDon","isDonValide","methods","getUtilisateur","id","utilisateurs","find","u","checkIsMontantValide","updateMontantDon","parseInt","computed","created","getAllPrestataires","getAllUsers","$route","params","prestataires","p"],"sources":["src/views/PageDon.vue"],"sourcesContent":["<template>\n    <div class=\"prestataire-detail\" v-if=\"prestataire\">\n        <h1>Faire un don à {{ prestataire.nom }}</h1>\n        <div>\n            <input @change=\"checkIsMontantValide()\" id=\"montant5\" type=\"radio\" value=\"5\" v-model=\"montantDon\">\n            <label for=\"montant5\">5€ </label>\n            <input @change=\"checkIsMontantValide()\" id=\"montant10\" type=\"radio\" value=\"10\" v-model=\"montantDon\">\n            <label for=\"montant10\">10€ </label>\n            <input @change=\"checkIsMontantValide()\" id=\"montant20\" type=\"radio\" value=\"20\" v-model=\"montantDon\">\n            <label for=\"montant20\">20€ </label>\n            <input @change=\"checkIsMontantValide()\" id=\"montant0\" type=\"radio\" value=\"0\" v-model=\"montantDon\">\n            <label for=\"montant0\">Choisir un montant personnalisé </label><br>\n            <div v-if=\"!premadeAmount.includes(montantDon)\">\n                <label for=\"personnalise\">Entrer un montant personnalisé: </label>\n                <input id=\"personnalise\" type=\"text\" @change=\"updateMontantDon()\" v-model=\"userInput\">\n            </div>\n            <div v-if=\"isDonValide\">\n                <p>Montant choisi: {{ montantDon }} €</p><br>\n                <input type=\"text\" style=\"\">\n                <button>Faire un don de {{ montantDon }} €</button>\n            </div>\n            <div v-else>\n                <p style=\"color: red;\">Veuillez entrer un montant valide</p>\n            </div>\n        </div>\n    </div>\n    <div v-else>\n        <p>Chargement des données...</p>\n    </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n    name: \"PageDon\",\n    data() {\n        return {\n            prestataire: null,\n            premadeAmount: [\"5\", \"10\", \"20\"],\n            userInput: \"0\",\n            montantDon: \"5\",\n            isDonValide: true,\n        };\n    },\n    methods: {\n        ...mapActions('prestataire', ['getAllPrestataires']),\n        ...mapActions('utilisateurs', ['getAllUsers']),\n        getUtilisateur(id) {\n            return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n        },\n        checkIsMontantValide(){\n            if(this.montantDon > 0) this.isDonValide = true;\n            else this.isDonValide = false;\n        },\n        updateMontantDon() {\n            if (parseInt(this.userInput) && this.userInput > 0) {\n                this.montantDon = this.userInput;\n                this.isDonValide = true;\n            }else{\n                this.isDonValide = false;\n            }\n        },\n    },\n    computed: {\n        ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n        ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n    },\n    async created() {\n        await this.getAllPrestataires();\n        await this.getAllUsers();\n        const id = this.$route.params.id;\n        this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale    \n    },\n};\n</script>\n\n<style scoped></style>"],"mappings":"AAgCA,SAAAA,UAAA,EAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,aAAA;MACAC,SAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAT,UAAA;IACA,GAAAA,UAAA;IACAU,eAAAC,EAAA;MACA,YAAAC,YAAA,CAAAC,IAAA,CAAAC,CAAA,IAAAA,CAAA,uBAAAH,EAAA;IACA;IACAI,qBAAA;MACA,SAAAR,UAAA,WAAAC,WAAA,aACA,KAAAA,WAAA;IACA;IACAQ,iBAAA;MACA,IAAAC,QAAA,MAAAX,SAAA,UAAAA,SAAA;QACA,KAAAC,UAAA,QAAAD,SAAA;QACA,KAAAE,WAAA;MACA;QACA,KAAAA,WAAA;MACA;IACA;EACA;EACAU,QAAA;IACA,GAAAjB,QAAA;IACA,GAAAA,QAAA;EACA;EACA,MAAAkB,QAAA;IACA,WAAAC,kBAAA;IACA,WAAAC,WAAA;IACA,MAAAV,EAAA,QAAAW,MAAA,CAAAC,MAAA,CAAAZ,EAAA;IACA,KAAAP,WAAA,QAAAoB,YAAA,CAAAX,IAAA,CAAAY,CAAA,IAAAA,CAAA,CAAAd,EAAA,KAAAA,EAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}