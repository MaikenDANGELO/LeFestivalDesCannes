{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      event: {\n        id: \"\",\n        nom: \"\",\n        description: \"\",\n        description_accueil: \"\",\n        categorie: \"\",\n        id_emplacement: \"\",\n        image: null,\n        services: [{\n          id_service: \"1\",\n          nom_service: \"\",\n          description_service: \"\",\n          lien_service: \"\",\n          statut_service: \"actif\"\n        }]\n      },\n      previewImage: null\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && (file.type === 'image/png' || file.type === 'image/jpeg' || file.type === 'image/jpg')) {\n        this.event.image = file;\n\n        // Générer une prévisualisation de l'image\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.previewImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert('Veuillez sélectionner une image au format PNG, JPEG ou JPG.');\n      }\n    },\n    addService() {\n      this.event.services.push({\n        id_service: (this.event.services.length + 1).toString(),\n        nom_service: \"\",\n        description_service: \"\",\n        lien_service: \"\",\n        statut_service: \"actif\"\n      });\n    },\n    removeService(index) {\n      this.event.services.splice(index, 1);\n    },\n    submitForm() {\n      console.log(\"Données du formulaire :\", this.event);\n      alert(\"Formulaire soumis !\");\n    }\n  }\n};","map":{"version":3,"names":["data","event","id","nom","description","description_accueil","categorie","id_emplacement","image","services","id_service","nom_service","description_service","lien_service","statut_service","previewImage","methods","handleFileUpload","file","target","files","type","reader","FileReader","onload","e","result","readAsDataURL","alert","addService","push","length","toString","removeService","index","splice","submitForm","console","log"],"sources":["src/components/ComponentsPrestataire.vue"],"sourcesContent":["<template>\n  <body>\n    <div class=\"main\">\n      <div class=\"formulaire-evenement\">\n        <h2 class=\"title\">Formulaire Prestataire</h2>\n        <form @submit.prevent=\"submitForm\">\n          <!-- Champ Nom -->\n          <div>\n            <label for=\"nom\">Nom :</label>\n            <input v-model=\"event.nom\" id=\"nom\" type=\"text\" required />\n          </div>\n\n          <!-- Champ Description -->\n          <div>\n            <label for=\"description\">Description :</label>\n            <textarea v-model=\"event.description\" id=\"description\" required></textarea>\n          </div>\n\n          <!-- Champ Description d'accueil -->\n          <div>\n            <label for=\"description_accueil\">Description Accueil :</label>\n            <textarea v-model=\"event.description_accueil\" id=\"description_accueil\" required></textarea>\n          </div>\n\n          <!-- Champ Catégorie -->\n          <div>\n            <label for=\"categorie\">Catégorie :</label>\n            <input v-model=\"event.categorie\" id=\"categorie\" type=\"text\" required />\n          </div>\n\n          <!-- Champ ID Emplacement -->\n          <div>\n            <label for=\"id_emplacement\">ID Emplacement :</label>\n            <input v-model=\"event.id_emplacement\" id=\"id_emplacement\" type=\"text\" required />\n          </div>\n\n\n          <!-- Champ Image -->\n          <div>\n            <label for=\"image\">Image :</label>\n            <input type=\"file\" id=\"image\" @change=\"handleFileUpload\" accept=\".png, .jpeg, .jpg\" />\n          </div>\n          <div v-if=\"previewImage\">\n            <img :src=\"previewImage\" alt=\"Prévisualisation de l'image\" style=\"max-width: 100%; margin-top: 10px;\" />\n          </div>\n\n          <!-- Section Services -->\n          <div class=\"services-section\">\n            <h3 class=\"underTitle\">Services:</h3>\n            <div v-for=\"(service, index) in event.services\" :key=\"service.id_service\" class=\"service\">\n              <label>Nom du Service :</label>\n              <input v-model=\"service.nom_service\" type=\"text\" required />\n\n              <label>Description du Service :</label>\n              <input v-model=\"service.description_service\" type=\"text\" required />\n\n              <label>Lien du Service :</label>\n              <input v-model=\"service.lien_service\" type=\"text\" required />\n\n              <label>Statut du Service :</label>\n              <select v-model=\"service.statut_service\" required>\n                <option value=\"actif\">Actif</option>\n                <option value=\"inactif\">Inactif</option>\n              </select>\n\n              <button @click=\"removeService(index)\" type=\"button\" class=\"service-button\">Supprimer le Service</button>\n            </div>\n            <button type=\"button\" @click=\"addService\" class=\"add-service-button\">Ajouter un Service</button>\n          </div>\n\n          <!-- Bouton de Soumission -->\n          <button type=\"submit\" class=\"submit-button\">Soumettre</button>\n        </form>\n      </div>\n    </div>\n  </body>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      event: {\n        id: \"\",\n        nom: \"\",\n        description: \"\",\n        description_accueil: \"\",\n        categorie: \"\",\n        id_emplacement: \"\",\n        image: null,\n        services: [\n          {\n            id_service: \"1\",\n            nom_service: \"\",\n            description_service: \"\",\n            lien_service: \"\",\n            statut_service: \"actif\",\n          },\n        ],\n      },\n      previewImage: null,\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && (file.type === 'image/png' || file.type === 'image/jpeg' || file.type === 'image/jpg')) {\n        this.event.image = file;\n\n        // Générer une prévisualisation de l'image\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.previewImage = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert('Veuillez sélectionner une image au format PNG, JPEG ou JPG.');\n      }\n    },\n    addService() {\n      this.event.services.push({\n        id_service: (this.event.services.length + 1).toString(),\n        nom_service: \"\",\n        description_service: \"\",\n        lien_service: \"\",\n        statut_service: \"actif\",\n      });\n    },\n    removeService(index) {\n      this.event.services.splice(index, 1);\n    },\n    submitForm() {\n      console.log(\"Données du formulaire :\", this.event);\n      alert(\"Formulaire soumis !\");\n    },\n  },\n};\n</script>\n\n<style scoped>\nbody {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: 'Jost', sans-serif;\n  background: linear-gradient(to bottom, #0f0c29, #302b63, #24243e);\n}\n\n.main {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n}\n\n.formulaire-evenement {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 5px 20px 50px rgba(0, 0, 0, 0.5);\n  width: 90%;\n  max-width: 600px;\n}\n\n.title {\n  color: #fff;\n  text-align: center;\n  font-size: 2em;\n  margin-bottom: 20px;\n}\n\n.underTitle{\n  color: #fff;\n  text-align: left;\n  font-size: 1.5em;\n}\n\nlabel {\n  color: #fff;\n  font-weight: bold;\n  display: block;\n  margin-top: 15px;\n}\n\ninput,\ntextarea,\nselect{\n  width: 90%;\n  padding: 10px;\n  margin-top: 5px;\n  border-radius: 5px;\n  border: none;\n  background: #e0dede;\n  outline: none;\n}\n\nbutton {\n  width: 100%;\n  padding: 10px;\n  color: #fff;\n  background-color: #573b8a;\n  font-size: 1em;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 0.2s;\n  cursor: pointer;\n  margin: 20px auto;\n}\n\n.submit-button:hover {\n  background-color: #6d44b8;\n}\n\n.services-section {\n  margin-top: 30px;\n}\n\n.service-button,\n.add-service-button {\n  background-color: #3498db;\n}\n\n.service-button:hover,\n.add-service-button:hover {\n  background-color: #2980b9;\n}\n\ntextarea {\n  resize: vertical;\n}\n\n.service {\n  margin-top: 20px;\n  padding: 10px;\n  border-radius: 10px;\n  background: rgba(255, 255, 255, 0.2);\n  color: white;\n}\n\n.service select{\n  width: 95%;\n}\n</style>\n"],"mappings":";AA+EA;EACAA,KAAA;IACA;MACAC,KAAA;QACAC,EAAA;QACAC,GAAA;QACAC,WAAA;QACAC,mBAAA;QACAC,SAAA;QACAC,cAAA;QACAC,KAAA;QACAC,QAAA,GACA;UACAC,UAAA;UACAC,WAAA;UACAC,mBAAA;UACAC,YAAA;UACAC,cAAA;QACA;MAEA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,iBAAAhB,KAAA;MACA,MAAAiB,IAAA,GAAAjB,KAAA,CAAAkB,MAAA,CAAAC,KAAA;MACA,IAAAF,IAAA,KAAAA,IAAA,CAAAG,IAAA,oBAAAH,IAAA,CAAAG,IAAA,qBAAAH,IAAA,CAAAG,IAAA;QACA,KAAApB,KAAA,CAAAO,KAAA,GAAAU,IAAA;;QAEA;QACA,MAAAI,MAAA,OAAAC,UAAA;QACAD,MAAA,CAAAE,MAAA,GAAAC,CAAA;UACA,KAAAV,YAAA,GAAAU,CAAA,CAAAN,MAAA,CAAAO,MAAA;QACA;QACAJ,MAAA,CAAAK,aAAA,CAAAT,IAAA;MACA;QACAU,KAAA;MACA;IACA;IACAC,WAAA;MACA,KAAA5B,KAAA,CAAAQ,QAAA,CAAAqB,IAAA;QACApB,UAAA,QAAAT,KAAA,CAAAQ,QAAA,CAAAsB,MAAA,MAAAC,QAAA;QACArB,WAAA;QACAC,mBAAA;QACAC,YAAA;QACAC,cAAA;MACA;IACA;IACAmB,cAAAC,KAAA;MACA,KAAAjC,KAAA,CAAAQ,QAAA,CAAA0B,MAAA,CAAAD,KAAA;IACA;IACAE,WAAA;MACAC,OAAA,CAAAC,GAAA,iCAAArC,KAAA;MACA2B,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}