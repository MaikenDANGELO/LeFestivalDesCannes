{"ast":null,"code":"import { mapActions, mapState } from 'vuex';\nexport default {\n  name: \"PageDon\",\n  data() {\n    return {\n      prestataire: null,\n      montantDon: 5\n    };\n  },\n  methods: {\n    ...mapActions('prestataire', ['getAllPrestataires']),\n    ...mapActions('utilisateurs', ['getAllUsers']),\n    getUtilisateur(id) {\n      return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n    }\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n    ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n  },\n  async created() {\n    await this.getAllPrestataires();\n    await this.getAllUsers();\n    const id = this.$route.params.id;\n    this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale    \n  }\n};","map":{"version":3,"names":["mapActions","mapState","name","data","prestataire","montantDon","methods","getUtilisateur","id","utilisateurs","find","u","computed","created","getAllPrestataires","getAllUsers","$route","params","prestataires","p"],"sources":["src/views/PageDon.vue"],"sourcesContent":["<template>\n    <div class=\"prestataire-detail\" v-if=\"prestataire\">\n      <h1>Faire un don à {{ prestataire.nom }}</h1>\n      <div>\n        <input type=\"radio\" value=\"5\" v-model=\"montantDon\">\n        <input type=\"radio\" value=\"10\" v-model=\"montantDon\">\n        <input type=\"radio\" value=\"20\" v-model=\"montantDon\"><br>\n        <label>Montant personnalisé: </label>\n        <input type=\"number\" v-model=\"montantDon\">\n      </div>\n    </div>\n    <div v-else>\n      <p>Chargement des données...</p>\n    </div>\n  </template>\n  \n  <script>\nimport {mapActions, mapState} from 'vuex';\n\nexport default {\n  name: \"PageDon\",\n  data() {\n    return {\n      prestataire: null,\n      montantDon: 5,\n    };\n  },\n  methods:{\n    ...mapActions('prestataire', ['getAllPrestataires']),\n    ...mapActions('utilisateurs', ['getAllUsers']),\n    getUtilisateur(id){\n      return this.utilisateurs.find(u => u['id_utilisateur'] === id);\n    },\n  },\n  computed: {\n    ...mapState('utilisateurs', ['utilisateur', 'utilisateurs']),\n    ...mapState('prestataire', [\"avis_prestataire\", \"prestataires\"])\n  },\n  async created() {\n    await this.getAllPrestataires();\n    await this.getAllUsers();\n    const id = this.$route.params.id;\n    this.prestataire = this.prestataires.find(p => p.id === id); // récupère le prestataire d'après l'id renseignée depuis la Page  principale    \n  },\n};\n</script>\n  \n  <style scoped>\n  </style>"],"mappings":"AAiBA,SAAAA,UAAA,EAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAN,UAAA;IACA,GAAAA,UAAA;IACAO,eAAAC,EAAA;MACA,YAAAC,YAAA,CAAAC,IAAA,CAAAC,CAAA,IAAAA,CAAA,uBAAAH,EAAA;IACA;EACA;EACAI,QAAA;IACA,GAAAX,QAAA;IACA,GAAAA,QAAA;EACA;EACA,MAAAY,QAAA;IACA,WAAAC,kBAAA;IACA,WAAAC,WAAA;IACA,MAAAP,EAAA,QAAAQ,MAAA,CAAAC,MAAA,CAAAT,EAAA;IACA,KAAAJ,WAAA,QAAAc,YAAA,CAAAR,IAAA,CAAAS,CAAA,IAAAA,CAAA,CAAAX,EAAA,KAAAA,EAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}