{"ast":null,"code":"import mapDataService from '@/services/map_data.service';\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      mapData: []\n    };\n  },\n  async mounted() {\n    this.mapData = await this.getMapData();\n    this.mapData = this.mapData['data'];\n  },\n  computed: {\n    ...mapState('prestataire', ['prestataires'])\n  },\n  methods: {\n    ...mapActions('prestataire', ['getAllPrestataires']),\n    async getMapData() {\n      this.getAllPrestataires();\n      return await mapDataService.getAllMapData();\n    },\n    getSVGPoints(points) {\n      return points.map(point => `${point[0]},${point[1]}`).join(' ');\n    },\n    getSVGStyle(fill_color, stroke_color, stroke_width) {\n      return `fill:${fill_color};stroke:${stroke_color};stroke-width:${stroke_width};`;\n    },\n    getPrestataireOfEmplacement(id) {\n      return this.prestataires.find(p => p.id_emplacement == id);\n    }\n  }\n};","map":{"version":3,"names":["mapDataService","mapState","mapActions","data","mapData","mounted","getMapData","computed","methods","getAllPrestataires","getAllMapData","getSVGPoints","points","map","point","join","getSVGStyle","fill_color","stroke_color","stroke_width","getPrestataireOfEmplacement","id","prestataires","find","p","id_emplacement"],"sources":["src/components/CarteInteractive.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h1>Carte intéractive</h1>\n        <div id=\"img-container\">\n            <img id=\"carte\" alt=\"carte intéractive\" src=\"../assets/map.svg\">\n            <svg v-for=\"data in mapData\" :key=\"data.id\" class=\"carte-mask\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1350 1350\" version=\"1.2\">\n                <polygon :id=\"data.id\" :points=\"getSVGPoints(data.points)\" :style=\"getSVGStyle(data.fill_color, data.stroke_color, data.stroke_width)\"/>\n            </svg>\n            <div class=\"legend\">\n                <h2>Légende :</h2>\n                <div v-for=\"data in mapData\" :key=\"data.id\" class=\"legend-line\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 1\" version=\"1.2\">\n                        <rect width=\"1\" height=\"1\" x=\"0\" y=\"0\" rx=\"20\" ry=\"20\" :fill=\"data.fill_color\" :stroke=\"\"></rect>\n                    </svg>\n                    <p>{{ getPrestataireOfEmplacement(data.id).nom }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    </template>\n    \n\n    <script>\n    import mapDataService from '@/services/map_data.service';\n    import { mapState, mapActions } from 'vuex';\n    \n    export default {\n        data() {\n            return {\n                mapData: []\n            };\n        },\n        async mounted() {\n            this.mapData = await this.getMapData();\n            this.mapData = this.mapData['data'];\n        },\n        computed: {\n            ...mapState('prestataire', ['prestataires']),\n        },\n        methods: {\n            ...mapActions('prestataire', ['getAllPrestataires']),\n            async getMapData() {\n                this.getAllPrestataires();\n                return await mapDataService.getAllMapData();\n            },\n            getSVGPoints(points) {\n                return points.map(point => `${point[0]},${point[1]}`).join(' ');\n            },\n            getSVGStyle(fill_color, stroke_color, stroke_width) {\n                return `fill:${fill_color};stroke:${stroke_color};stroke-width:${stroke_width};`;\n            },\n            getPrestataireOfEmplacement(id){\n                return this.prestataires.find((p) => p.id_emplacement == id);\n            }\n        }\n    };\n    </script>\n    \n\n<style scoped>\n#carte {\n    width: 100%;\n    max-width: 40%;\n    height: auto;\n    position: absolute;\n}\n.carte-mask{\n    width: 100%;\n    max-width: 40%;\n    height: auto;\n    position: absolute;\n}\n\n#img-container{\n    margin-top: 1%;\n    display: flex;\n    flex-direction: column;\n    margin-left: 2%;\n    height: 800px;\n}\n\n.legend{\n    margin-top: 830px;\n    display: flex;\n    flex-direction: column;\n}\n.legend-line{\n    display: flex;\n    flex-direction: row;\n}\n.legend-line p{\n    position: relative;\n    right: 86vw;\n    width: 30vw;\n}\n</style>"],"mappings":"AAuBA,OAAAA,cAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAD,OAAA,cAAAE,UAAA;IACA,KAAAF,OAAA,QAAAA,OAAA;EACA;EACAG,QAAA;IACA,GAAAN,QAAA;EACA;EACAO,OAAA;IACA,GAAAN,UAAA;IACA,MAAAI,WAAA;MACA,KAAAG,kBAAA;MACA,aAAAT,cAAA,CAAAU,aAAA;IACA;IACAC,aAAAC,MAAA;MACA,OAAAA,MAAA,CAAAC,GAAA,CAAAC,KAAA,OAAAA,KAAA,OAAAA,KAAA,OAAAC,IAAA;IACA;IACAC,YAAAC,UAAA,EAAAC,YAAA,EAAAC,YAAA;MACA,eAAAF,UAAA,WAAAC,YAAA,iBAAAC,YAAA;IACA;IACAC,4BAAAC,EAAA;MACA,YAAAC,YAAA,CAAAC,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,cAAA,IAAAJ,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}