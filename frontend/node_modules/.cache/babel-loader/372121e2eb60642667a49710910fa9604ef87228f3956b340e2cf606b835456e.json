{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport PrestatairesService from \"../services/prestataires.service\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: () => ({\n    prestataires: [],\n    utilisateur: {\n      role: '',\n      nom: '',\n      id: 0,\n      estConnecte: false\n    },\n    avis_prestataire: []\n  }),\n  getters: {},\n  mutations: {\n    updatePrestataires: (state, prestataires) => {\n      state.prestataires = prestataires;\n    },\n    SET_USER(state, user) {\n      state.utilisateur.nom = user.nom_utilisateur;\n      state.utilisateur.role = user.role;\n      state.utilisateur.id = user.id_utilisateur;\n      state.utilisateur.estConnecte = true;\n    },\n    LOGOUT(state) {\n      state.utilisateur = {\n        role: '',\n        nom: '',\n        id: 0,\n        estConnecte: false\n      };\n    },\n    updateAvisPrestataire: (state, avis_prestataire) => {\n      state.avis_prestataire = avis_prestataire;\n    }\n  },\n  actions: {\n    async getAllPrestataires({\n      commit\n    }) {\n      console.log(\"récupération des prestataires\");\n      let response = await PrestatairesService.getAllPrestataires();\n      if (response.error === 0) {\n        commit(\"updatePrestataires\", response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getPrestataireAvis({\n      commit\n    }, id_prestataire) {\n      console.log(\"récupération des avis du prestataire \" + id_prestataire);\n      let response = await PrestatairesService.getAvisOfPrestataire(id_prestataire);\n      if (response.error === 0) {\n        commit(\"updateAvisPrestataire\", response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    logout({\n      commit\n    }) {\n      console.log(\"zebi\");\n      commit('LOGOUT');\n    },\n    async logIn({\n      commit\n    }, data) {\n      commit('SET_USER', data);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","PrestatairesService","use","Store","state","prestataires","utilisateur","role","nom","id","estConnecte","avis_prestataire","getters","mutations","updatePrestataires","SET_USER","user","nom_utilisateur","id_utilisateur","LOGOUT","updateAvisPrestataire","actions","getAllPrestataires","commit","console","log","response","error","data","getPrestataireAvis","id_prestataire","getAvisOfPrestataire","logout","logIn","modules"],"sources":["/home/raskiel/Code/Code BUT/Annee2/SAE_S3-S4/frontend/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport PrestatairesService from \"../services/prestataires.service\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: () => ({\n    prestataires: [],\n    utilisateur: {\n      role: '',\n      nom: '',\n      id: 0,\n      estConnecte:false,\n    },\n    avis_prestataire: [],\n\n  }),\n  getters: {},\n  mutations: {\n    updatePrestataires: (state, prestataires) => {\n      state.prestataires = prestataires;\n    },\n    SET_USER(state, user) {\n      state.utilisateur.nom = user.nom_utilisateur;\n      state.utilisateur.role = user.role;\n      state.utilisateur.id = user.id_utilisateur\n      state.utilisateur.estConnecte = true\n    },\n    LOGOUT(state) {\n      state.utilisateur = {\n        role: '',\n        nom: '',\n        id:0,\n        estConnecte: false,\n      };\n\n    },\n    updateAvisPrestataire: (state, avis_prestataire) => {\n      state.avis_prestataire = avis_prestataire;\n    },\n  },\n  actions: {\n    async getAllPrestataires({ commit }) {\n      console.log(\"récupération des prestataires\");\n      let response = await PrestatairesService.getAllPrestataires();\n      if (response.error === 0) {\n        commit(\"updatePrestataires\", response.data);\n      } else {\n        console.log(response.data);\n      }\n    },\n    async getPrestataireAvis({commit}, id_prestataire) {\n      console.log(\"récupération des avis du prestataire \"+id_prestataire);\n      let response = await PrestatairesService.getAvisOfPrestataire(id_prestataire);\n      if (response.error === 0){\n        commit(\"updateAvisPrestataire\", response.data);\n      }else{\n        console.log(response.data);\n      }\n    },\n    logout({ commit }) {\n      console.log(\"zebi\")\n      commit('LOGOUT');\n    },\n     async logIn({ commit }, data){\n      commit('SET_USER', data)\n    },\n  },\n  modules: {},\n});\n\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,mBAAmB,MAAM,kCAAkC;AAElEF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,KAAK,EAAEA,CAAA,MAAO;IACZC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE,EAAE;MACPC,EAAE,EAAE,CAAC;MACLC,WAAW,EAAC;IACd,CAAC;IACDC,gBAAgB,EAAE;EAEpB,CAAC,CAAC;EACFC,OAAO,EAAE,CAAC,CAAC;EACXC,SAAS,EAAE;IACTC,kBAAkB,EAAEA,CAACV,KAAK,EAAEC,YAAY,KAAK;MAC3CD,KAAK,CAACC,YAAY,GAAGA,YAAY;IACnC,CAAC;IACDU,QAAQA,CAACX,KAAK,EAAEY,IAAI,EAAE;MACpBZ,KAAK,CAACE,WAAW,CAACE,GAAG,GAAGQ,IAAI,CAACC,eAAe;MAC5Cb,KAAK,CAACE,WAAW,CAACC,IAAI,GAAGS,IAAI,CAACT,IAAI;MAClCH,KAAK,CAACE,WAAW,CAACG,EAAE,GAAGO,IAAI,CAACE,cAAc;MAC1Cd,KAAK,CAACE,WAAW,CAACI,WAAW,GAAG,IAAI;IACtC,CAAC;IACDS,MAAMA,CAACf,KAAK,EAAE;MACZA,KAAK,CAACE,WAAW,GAAG;QAClBC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE,EAAE;QACPC,EAAE,EAAC,CAAC;QACJC,WAAW,EAAE;MACf,CAAC;IAEH,CAAC;IACDU,qBAAqB,EAAEA,CAAChB,KAAK,EAAEO,gBAAgB,KAAK;MAClDP,KAAK,CAACO,gBAAgB,GAAGA,gBAAgB;IAC3C;EACF,CAAC;EACDU,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACnCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAIC,QAAQ,GAAG,MAAMzB,mBAAmB,CAACqB,kBAAkB,CAAC,CAAC;MAC7D,IAAII,QAAQ,CAACC,KAAK,KAAK,CAAC,EAAE;QACxBJ,MAAM,CAAC,oBAAoB,EAAEG,QAAQ,CAACE,IAAI,CAAC;MAC7C,CAAC,MAAM;QACLJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;MAC5B;IACF,CAAC;IACD,MAAMC,kBAAkBA,CAAC;MAACN;IAAM,CAAC,EAAEO,cAAc,EAAE;MACjDN,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAACK,cAAc,CAAC;MACnE,IAAIJ,QAAQ,GAAG,MAAMzB,mBAAmB,CAAC8B,oBAAoB,CAACD,cAAc,CAAC;MAC7E,IAAIJ,QAAQ,CAACC,KAAK,KAAK,CAAC,EAAC;QACvBJ,MAAM,CAAC,uBAAuB,EAAEG,QAAQ,CAACE,IAAI,CAAC;MAChD,CAAC,MAAI;QACHJ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;MAC5B;IACF,CAAC;IACDI,MAAMA,CAAC;MAAET;IAAO,CAAC,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBF,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACA,MAAMU,KAAKA,CAAC;MAAEV;IAAO,CAAC,EAAEK,IAAI,EAAC;MAC5BL,MAAM,CAAC,UAAU,EAAEK,IAAI,CAAC;IAC1B;EACF,CAAC;EACDM,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}