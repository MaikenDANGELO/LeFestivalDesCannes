{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LocalSource from \"@/datasource/controller\";\nexport default {\n  name: 'BilletterieForm',\n  data() {\n    return {\n      currentStep: 1,\n      form: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: []\n      },\n      recap: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: []\n      },\n      Message: '',\n      ticketPrices: {\n        adulte: 10,\n        enfant: 5,\n        senior: 7\n      },\n      payment: {\n        cardNumber: '',\n        expirationDate: '',\n        cvv: ''\n      },\n      orderSummary: false\n    };\n  },\n  computed: {\n    totalForm() {\n      if (typeof this.form.tickets === 'undefined') return 0;\n      let total = 0;\n      for (let i = 0; i < this.form.tickets.length; i++) {\n        total += (this.ticketPrices[this.form.tickets[i].type] || 0) * this.form.tickets[i].quantity;\n      }\n      return total;\n    },\n    totalRecap() {\n      if (typeof this.recap.tickets === 'undefined') return 0;\n      let total = 0;\n      for (let i = 0; i < this.recap.tickets.length; i++) {\n        total += (this.ticketPrices[this.recap.tickets[i].type] || 0) * this.recap.tickets[i].quantity;\n      }\n      return total;\n    }\n  },\n  methods: {\n    addTicket() {\n      this.form.tickets.push({\n        type: '',\n        quantity: 1\n      });\n    },\n    removeTicket(index) {\n      this.form.tickets.splice(index, 1);\n    },\n    goToPayment() {\n      if (this.form.tickets.length === 0) {\n        this.Message = \"Donner le type et le nombre de tickets.\";\n        return;\n      }\n      // Transition vers la page de paiement\n      this.currentStep = 2;\n    },\n    async processPayment() {\n      // Simuler le paiement et retourner au formulaire avec le récapitulatif\n      // Vous pouvez ajouter ici un vrai traitement de paiement via une API\n      setTimeout(() => {\n        console.log(\"Bonjour, avant\");\n        this.currentStep = 1;\n        this.orderSummary = true; // Afficher le récapitulatif de la commande\n        console.log(\"Bonjour, après\");\n        console.log(this.currentStep);\n        console.log(this.orderSummary);\n      }, 1000); // Simuler un délai de traitement\n\n      if (this.form.tickets.length === 0) {\n        this.Message = \"Donner le type et le nombre de tickets.\";\n        return;\n      }\n      const response = await LocalSource.insertBillet(this, this.totalForm);\n      if (response.error === 0) {\n        // Gérer la réponse en cas de succès\n        this.Message = \"Réservation réussie ! Merci de votre achat.\";\n      } else {\n        this.Message = \"Une erreur est survenue lors de la réservation.\";\n      }\n\n      //Translation des variables de form dans recap\n      this.recap.firstName = this.form.firstName;\n      this.recap.lastName = this.form.lastName;\n      this.recap.email = this.form.email;\n      this.recap.tickets = [...this.form.tickets];\n\n      //Rénitialisation de form et des informations de payment\n      this.form = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: []\n      };\n      this.resetPayment();\n    },\n    resetPayment() {\n      // Réinitialiser les champs de paiement\n      this.payment.cardNumber = '';\n      this.payment.expirationDate = '';\n      this.payment.cvv = '';\n    }\n  }\n};","map":{"version":3,"names":["LocalSource","name","data","currentStep","form","firstName","lastName","email","tickets","recap","Message","ticketPrices","adulte","enfant","senior","payment","cardNumber","expirationDate","cvv","orderSummary","computed","totalForm","total","i","length","type","quantity","totalRecap","methods","addTicket","push","removeTicket","index","splice","goToPayment","processPayment","setTimeout","console","log","response","insertBillet","error","resetPayment"],"sources":["src/views/PageBilletterie.vue"],"sourcesContent":["<template>\n  <form v-if=\"currentStep === 1\" @submit.prevent=\"goToPayment\" method=\"POST\">\n    <h2>Réservation de Billet</h2>\n\n    <div class=\"form-group\">\n      <label for=\"firstName\">Prénom :</label>\n      <input v-model=\"form.firstName\" type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"Votre prénom\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Nom :</label>\n      <input v-model=\"form.lastName\" type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Votre nom\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email :</label>\n      <input v-model=\"form.email\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Votre email\" required>\n    </div>\n\n    <div class=\"form-group\" v-for=\"(ticket, index) in form.tickets\" :key=\"index\">\n      <label for=\"type\">Type de billet :</label>\n      <select id=\"type\" v-model=\"ticket.type\" required>\n        <option value=\"\">-- Sélectionnez le type de billet --</option>\n        <option value=\"adulte\">Adulte - 10€</option>\n        <option value=\"enfant\">Enfant - 5€</option>\n        <option value=\"senior\">Senior - 7€</option>\n      </select>\n\n      <label for=\"ticketQuantity\">Nombre de billets :</label>\n      <input id=\"ticketQuantity\" v-model=\"ticket.quantity\" type=\"number\" placeholder=\"Nombre de billets\" min=\"1\" max=\"10\" required>\n\n      <button type=\"button\" @click=\"removeTicket(index)\">Supprimer ce type de billet</button>\n    </div>\n\n    <button type=\"button\" @click=\"addTicket\">Ajouter un type de billet</button>\n\n    <div class=\"form-group\">\n      <p><strong>Total: {{ totalForm }} €</strong></p>\n    </div>\n\n    <button type=\"submit\">Passer au paiement</button>\n    <p>{{Message}}</p>\n\n    <div v-if=\"orderSummary\">\n      <h2>Récapitulatif de la commande</h2>\n      <p><strong>Prénom :</strong> {{ recap.firstName }}</p>\n      <p><strong>Nom :</strong> {{ recap.lastName }}</p>\n      <p><strong>Email :</strong> {{ recap.email }}</p>\n      <h3>Billets :</h3>\n      <ul>\n        <li v-for=\"(ticket, index) in recap.tickets\" :key=\"index\">\n          {{ ticket.quantity }} x {{ ticket.type }} ({{ ticket.type === 'adulte' ? '10€' : ticket.type === 'enfant' ? '5€' : '7€' }} par billet)\n        </li>\n      </ul>\n      <p><strong>Total :</strong> {{ totalRecap }} €</p>\n    </div>\n  </form>\n\n\n\n  <form v-else-if=\"currentStep === 2\" @submit.prevent=\"processPayment\">\n    <h2>Paiement</h2>\n\n    <div class=\"form-group\">\n      <label for=\"cardNumber\">Numéro de carte :</label>\n      <input v-model=\"payment.cardNumber\" type=\"text\" id=\"cardNumber\" pattern=\"\\d{16,}\" placeholder=\"Numéro de carte\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"expirationDate\">Date d'expiration :</label>\n      <input v-model=\"payment.expirationDate\" type=\"text\" id=\"expirationDate\"  pattern=\"^(0[1-9]|1[0-2])\\/\\d{2}$\" placeholder=\"MM/AA\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"cvv\">CVV :</label>\n      <input v-model=\"payment.cvv\" type=\"text\" id=\"cvv\" placeholder=\"CVV\" required>\n    </div>\n\n    <div class=\"form-group\">\n      <p><strong>Total à payer : {{ totalForm }} €</strong></p>\n    </div>\n\n    <button type=\"submit\">Payer</button>\n  </form>\n\n</template>\n\n<script>\nimport LocalSource from \"@/datasource/controller\";\n\nexport default {\n  name: 'BilletterieForm',\n  data() {\n    return {\n      currentStep: 1,\n      form: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: [],\n      },\n      recap:{\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: [],\n      },\n      Message: '',\n      ticketPrices: {\n        adulte: 10,\n        enfant: 5,\n        senior: 7\n      },\n      payment: {\n        cardNumber: '',\n        expirationDate: '',\n        cvv: ''\n      },\n      orderSummary: false,\n    };\n  },\n  computed: {\n    totalForm() {\n      if (typeof this.form.tickets === 'undefined') return 0\n      let total = 0\n      for (let i = 0; i < this.form.tickets.length; i++) {\n        total += (this.ticketPrices[this.form.tickets[i].type] || 0) * this.form.tickets[i].quantity;\n      }\n      return total;\n    },\n    totalRecap() {\n      if (typeof this.recap.tickets === 'undefined') return 0\n      let total = 0\n      for (let i = 0; i < this.recap.tickets.length; i++) {\n        total += (this.ticketPrices[this.recap.tickets[i].type] || 0) * this.recap.tickets[i].quantity;\n      }\n      return total;\n    }\n  },\n  methods: {\n    addTicket() {\n      this.form.tickets.push({ type: '', quantity: 1 });\n    },\n    removeTicket(index) {\n      this.form.tickets.splice(index, 1);\n    },\n    goToPayment() {\n      if (this.form.tickets.length === 0){\n        this.Message = \"Donner le type et le nombre de tickets.\";\n        return;\n      }\n      // Transition vers la page de paiement\n      this.currentStep = 2;\n    },\n    async processPayment() {\n      // Simuler le paiement et retourner au formulaire avec le récapitulatif\n      // Vous pouvez ajouter ici un vrai traitement de paiement via une API\n      setTimeout(() => {\n        console.log(\"Bonjour, avant\")\n        this.currentStep = 1;\n        this.orderSummary = true; // Afficher le récapitulatif de la commande\n        console.log(\"Bonjour, après\")\n        console.log(this.currentStep)\n        console.log(this.orderSummary)\n      }, 1000); // Simuler un délai de traitement\n\n      if (this.form.tickets.length === 0){\n        this.Message = \"Donner le type et le nombre de tickets.\";\n        return;\n      }\n      const response = await LocalSource.insertBillet(this, this.totalForm);\n      if (response.error === 0){\n        // Gérer la réponse en cas de succès\n        this.Message = \"Réservation réussie ! Merci de votre achat.\";\n      }\n      else{\n        this.Message = \"Une erreur est survenue lors de la réservation.\";\n      }\n\n      //Translation des variables de form dans recap\n      this.recap.firstName = this.form.firstName;\n      this.recap.lastName = this.form.lastName;\n      this.recap.email = this.form.email;\n      this.recap.tickets = [...this.form.tickets];\n\n      //Rénitialisation de form et des informations de payment\n      this.form = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        tickets: [],\n      }\n      this.resetPayment();\n\n    },\n    resetPayment() {\n      // Réinitialiser les champs de paiement\n      this.payment.cardNumber = '';\n      this.payment.expirationDate = '';\n      this.payment.cvv = '';\n    }\n  }\n}\n</script>\n\n\n<style scoped>\nform {\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  max-width: 500px;\n  margin: 0 auto;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\nh2 {\n  text-align: center;\n}\n.form-group {\n  margin-bottom: 15px;\n}\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\ninput, select, button {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\nbutton {\n  background-color: #333;\n  color: white;\n  cursor: pointer;\n}\nbutton:hover {\n  background-color: #555;\n}\n</style>"],"mappings":";AAwFA,OAAAA,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,IAAA;QACAC,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAC,KAAA;QACAJ,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAE,OAAA;MACAC,YAAA;QACAC,MAAA;QACAC,MAAA;QACAC,MAAA;MACA;MACAC,OAAA;QACAC,UAAA;QACAC,cAAA;QACAC,GAAA;MACA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,gBAAAjB,IAAA,CAAAI,OAAA;MACA,IAAAc,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAnB,IAAA,CAAAI,OAAA,CAAAgB,MAAA,EAAAD,CAAA;QACAD,KAAA,UAAAX,YAAA,MAAAP,IAAA,CAAAI,OAAA,CAAAe,CAAA,EAAAE,IAAA,eAAArB,IAAA,CAAAI,OAAA,CAAAe,CAAA,EAAAG,QAAA;MACA;MACA,OAAAJ,KAAA;IACA;IACAK,WAAA;MACA,gBAAAlB,KAAA,CAAAD,OAAA;MACA,IAAAc,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAd,KAAA,CAAAD,OAAA,CAAAgB,MAAA,EAAAD,CAAA;QACAD,KAAA,UAAAX,YAAA,MAAAF,KAAA,CAAAD,OAAA,CAAAe,CAAA,EAAAE,IAAA,eAAAhB,KAAA,CAAAD,OAAA,CAAAe,CAAA,EAAAG,QAAA;MACA;MACA,OAAAJ,KAAA;IACA;EACA;EACAM,OAAA;IACAC,UAAA;MACA,KAAAzB,IAAA,CAAAI,OAAA,CAAAsB,IAAA;QAAAL,IAAA;QAAAC,QAAA;MAAA;IACA;IACAK,aAAAC,KAAA;MACA,KAAA5B,IAAA,CAAAI,OAAA,CAAAyB,MAAA,CAAAD,KAAA;IACA;IACAE,YAAA;MACA,SAAA9B,IAAA,CAAAI,OAAA,CAAAgB,MAAA;QACA,KAAAd,OAAA;QACA;MACA;MACA;MACA,KAAAP,WAAA;IACA;IACA,MAAAgC,eAAA;MACA;MACA;MACAC,UAAA;QACAC,OAAA,CAAAC,GAAA;QACA,KAAAnC,WAAA;QACA,KAAAgB,YAAA;QACAkB,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,MAAAnC,WAAA;QACAkC,OAAA,CAAAC,GAAA,MAAAnB,YAAA;MACA;;MAEA,SAAAf,IAAA,CAAAI,OAAA,CAAAgB,MAAA;QACA,KAAAd,OAAA;QACA;MACA;MACA,MAAA6B,QAAA,SAAAvC,WAAA,CAAAwC,YAAA,YAAAnB,SAAA;MACA,IAAAkB,QAAA,CAAAE,KAAA;QACA;QACA,KAAA/B,OAAA;MACA,OACA;QACA,KAAAA,OAAA;MACA;;MAEA;MACA,KAAAD,KAAA,CAAAJ,SAAA,QAAAD,IAAA,CAAAC,SAAA;MACA,KAAAI,KAAA,CAAAH,QAAA,QAAAF,IAAA,CAAAE,QAAA;MACA,KAAAG,KAAA,CAAAF,KAAA,QAAAH,IAAA,CAAAG,KAAA;MACA,KAAAE,KAAA,CAAAD,OAAA,YAAAJ,IAAA,CAAAI,OAAA;;MAEA;MACA,KAAAJ,IAAA;QACAC,SAAA;QACAC,QAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACA,KAAAkC,YAAA;IAEA;IACAA,aAAA;MACA;MACA,KAAA3B,OAAA,CAAAC,UAAA;MACA,KAAAD,OAAA,CAAAE,cAAA;MACA,KAAAF,OAAA,CAAAG,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}